<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.project.mapper.userMapper">
	<!-- 开启二级缓存 -->
	<cache>
		<!-- 回收策略，默认为 LRU -->
		<!-- <property name="eviction" value="FIFO"/> -->
		<!-- 自动刷新间隔，单位毫秒 -->
		<!-- <property name="flushInterval" value="600000"/> -->
		<!-- 最大缓存对象数，默认 1024 -->
		<!-- <property name="size" value="512"/> -->
		<!-- 是否只读 -->
		<!-- <property name="readOnly" value="true"/> -->
	</cache>
	<!-- 根据 id 查询一个 User 对象 -->
	<!-- 不使用别名, resultType 需要全类名 -->
	<!-- <select id="getUser" parameterType="int" resultType="com.company.project.model.User"> -->
	<!-- 使用别名，只需写简单类名 -->
	<select id="getUser" parameterType="int" resultType="User">
		SELECT * FROM user WHERE id = #{id}
	</select>
	<!-- 添加用户 -->
	<insert id="addUser" parameterType="User">
		INSERT INTO user(name,age) VALUES(#{name},#{age})
	</insert>
	<!-- 删除用户 -->
	<delete id="delUser" parameterType="int">
		DELETE FROM user WHERE id = #{id}
	</delete>
	<!-- 修改用户 -->
	<update id="updateUser" parameterType="User">
		UPDATE user SET name = #{name}, age = #{age} WHERE id = #{id}
	</update>
	<!-- 查询所有用户 -->
	<select id="getAllUsers" resultType="User">
		SELECT * FROM user
	</select>
	<!-- 
		调用储存过程实现查询男、女用户数量
		传参为 0 则为女，否者为男
	 -->
	 <select id="getUserCount" parameterMap="getUserCountMap" statementType="CALLABLE">
	 	CALL mybatis.get_user_count(?,?)
	 </select>
	 
	 <parameterMap type="java.util.Map" id="getUserCountMap">
	 	<parameter property="sexId" mode="IN" javaType="INTEGER"/>
	 	<parameter property="userCount" mode="OUT" jdbcType="INTEGER"/>
	 </parameterMap>
</mapper>